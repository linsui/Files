<UserControl
    x:Class="Files.UserControls.SidebarControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:conv="using:Files.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Files.UserControls"
    xmlns:local1="using:Files"
    xmlns:local2="using:Files.Filesystem"
    xmlns:local3="using:Files.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mconv="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="768"
    d:DesignWidth="200"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <AcrylicBrush
                        x:Key="NavigationViewExpandedPaneBackground"
                        Windows10version1903:TintLuminosityOpacity="0.85"
                        AlwaysUseFallback="{x:Bind AppSettings.IsAcrylicDisabled, Mode=OneWay}"
                        BackgroundSource="HostBackdrop"
                        FallbackColor="{ThemeResource SolidBackgroundFillColorBase}"
                        TintColor="{x:Bind AppSettings.AcrylicTheme.TintColor, Mode=OneWay}"
                        TintOpacity="{x:Bind AppSettings.AcrylicTheme.TintOpacity, Mode=OneWay}" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <AcrylicBrush
                        x:Key="NavigationViewExpandedPaneBackground"
                        Windows10version1903:TintLuminosityOpacity="0.85"
                        AlwaysUseFallback="{x:Bind AppSettings.IsAcrylicDisabled, Mode=OneWay}"
                        BackgroundSource="HostBackdrop"
                        FallbackColor="{ThemeResource SolidBackgroundFillColorBase}"
                        TintColor="{x:Bind AppSettings.AcrylicTheme.TintColor, Mode=OneWay}"
                        TintOpacity="{x:Bind AppSettings.AcrylicTheme.TintOpacity, Mode=OneWay}" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="NavigationViewExpandedPaneBackground" Color="{ThemeResource SystemColorWindowColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <DataTemplate x:Key="LocationNavItem" x:DataType="local2:LocationItem">
                <muxc:NavigationViewItem
                    AllowDrop="True"
                    BorderThickness="0.8"
                    CanDrag="False"
                    Content="{x:Bind Text}"
                    DataContext="{x:Bind}"
                    DragEnter="NavigationViewItem_DragEnter"
                    DragLeave="NavigationViewItem_DragLeave"
                    DragOver="NavigationViewLocationItem_DragOver"
                    DragStarting="NavigationViewItem_DragStarting"
                    Drop="NavigationViewLocationItem_Drop"
                    IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}"
                    IsRightTapEnabled="True"
                    MenuItemsSource="{x:Bind ChildItems}"
                    RightTapped="NavigationViewLocationItem_RightTapped"
                    SelectsOnInvoked="{x:Bind SelectsOnInvoked}"
                    Tag="{x:Bind Path}"
                    ToolTipService.ToolTip="{x:Bind HoverDisplayText}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon FontFamily="{x:Bind Font}" Glyph="{x:Bind Glyph}" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </DataTemplate>

            <DataTemplate x:Key="DriveNavItem" x:DataType="local2:DriveItem">
                <muxc:NavigationViewItem
                    Padding="0"
                    AllowDrop="True"
                    BorderThickness="0.8"
                    Content="{x:Bind Text, Mode=OneWay}"
                    DataContext="{x:Bind}"
                    DragEnter="NavigationViewItem_DragEnter"
                    DragLeave="NavigationViewItem_DragLeave"
                    DragOver="NavigationViewDriveItem_DragOver"
                    Drop="NavigationViewDriveItem_Drop"
                    IsRightTapEnabled="True"
                    RightTapped="NavigationViewDriveItem_RightTapped"
                    Tag="{x:Bind Path}"
                    ToolTipService.ToolTip="{x:Bind HoverDisplayText, Mode=OneWay}"
                    Visibility="{x:Bind ItemVisibility}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="{x:Bind Glyph}" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </DataTemplate>

            <DataTemplate x:Key="LinuxNavItem" x:DataType="local1:WSLDistroItem">
                <muxc:NavigationViewItem
                    Padding="0"
                    BorderThickness="0.8"
                    Content="{x:Bind Text}"
                    DataContext="{x:Bind}"
                    DragEnter="NavigationViewItem_DragEnter"
                    DragLeave="NavigationViewItem_DragLeave"
                    RightTapped="NavigationViewWSLItem_RightTapped"
                    Tag="{x:Bind Path}"
                    ToolTipService.ToolTip="{x:Bind HoverDisplayText, Mode=OneWay}">
                    <muxc:NavigationViewItem.Icon>
                        <BitmapIcon
                            Width="30"
                            Height="30"
                            ShowAsMonochrome="False"
                            UriSource="{x:Bind Logo}" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </DataTemplate>

            <local:NavItemDataTemplateSelector
                x:Key="NavItemSelector"
                DriveNavItemTemplate="{StaticResource DriveNavItem}"
                LinuxNavItemTemplate="{StaticResource LinuxNavItem}"
                LocationNavItemTemplate="{StaticResource LocationNavItem}" />

            <mconv:BoolNegationConverter x:Key="BoolNegationConverter" />
            <conv:NavigationViewCompactConverter x:Key="DisplayModeConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <muxc:NavigationView
            x:Name="SidebarNavView"
            HorizontalAlignment="Stretch"
            IsBackButtonVisible="Collapsed"
            IsPaneOpen="{x:Bind IsOpen, Mode=TwoWay}"
            IsPaneToggleButtonVisible="{x:Bind IsCompact, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
            IsSettingsVisible="True"
            IsTitleBarAutoPaddingEnabled="False"
            ItemInvoked="Sidebar_ItemInvoked"
            MenuItemTemplateSelector="{StaticResource NavItemSelector}"
            MenuItemsSource="{x:Bind local:SidebarControl.SideBarItems, Mode=OneWay}"
            OpenPaneLength="{x:Bind AppSettings.SidebarWidth.Value, Mode=OneWay}"
            PaneDisplayMode="{x:Bind IsCompact, Mode=OneWay, Converter={StaticResource DisplayModeConverter}}"
            SelectedItem="{x:Bind SelectedSidebarItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <muxc:NavigationView.Resources>
                <ResourceDictionary>
                    <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8.0</x:Double>

                    <MenuFlyout x:Name="SideBarItemContextFlyout" x:FieldModifier="public">
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                x:Name="EmptyRecycleBin"
                                x:Uid="BaseLayoutContextFlyoutEmptyRecycleBin"
                                x:Load="{x:Bind ShowEmptyRecycleBin, Mode=OneWay}"
                                Command="{x:Bind EmptyRecycleBinCommand, Mode=OneWay}"
                                IsEnabled="{x:Bind RecycleBinHasItems, Mode=OneWay}"
                                Text="Empty recycle bin">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource RecycleBinIcons}" Glyph="&#xEF88;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="OpenInNewPane"
                                x:Uid="SideBarOpenInNewPane"
                                x:Load="{x:Bind CanOpenInNewPane, Mode=OneWay}"
                                Click="OpenInNewPane_Click"
                                Text="Open in new pane">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource OldFluentUIGlyphs}" Glyph="&#xEA2F;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="OpenInNewTab"
                                x:Uid="SideBarOpenInNewTab"
                                Click="OpenInNewTab_Click"
                                Text="Open in new tab">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF106;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="OpenInNewWindow"
                                x:Uid="SideBarOpenInNewWindow"
                                Click="OpenInNewWindow_Click"
                                Text="Open in new window">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF107;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="UnpinItem"
                                x:Uid="SideBarUnpinFromSideBar"
                                x:Load="{x:Bind ShowUnpinItem, Mode=OneWay}"
                                Click="{x:Bind UnpinItem_Click}"
                                Text="Unpin from Sidebar">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE77A;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="EjectDevice"
                                x:Uid="SideBarEjectDevice"
                                x:Load="{x:Bind ShowEjectDevice, Mode=OneWay}"
                                Click="EjectDevice_Click"
                                Text="Eject">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF10B;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="PropertiesFolder"
                                x:Uid="BaseLayoutContextFlyoutPropertiesFolder"
                                x:Load="{x:Bind ShowProperties, Mode=OneWay}"
                                Click="Properties_Click"
                                Text="Properties">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE946;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </ResourceDictionary>
            </muxc:NavigationView.Resources>

            <muxc:NavigationView.PaneToggleButtonStyle>
                <Style BasedOn="{StaticResource PaneToggleButtonStyle}" TargetType="Button">
                    <!--
                        Note: This template might be updated in the next version of WinUI.
                        When moving to a new version, this template override might be removed
                        as it is here only for overriding the navigation pane toggle icon.
                    -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid
                                    x:Name="LayoutRoot"
                                    Height="{TemplateBinding MinHeight}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                                    </Grid.RowDefinitions>

                                    <Border Width="{TemplateBinding MinWidth}">
                                        <Viewbox
                                            x:Name="IconHost"
                                            Width="18"
                                            Height="18"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            AutomationProperties.AccessibilityView="Raw">
                                            <FontIcon
                                                x:Name="Icon"
                                                AutomationProperties.AccessibilityView="Raw"
                                                FontSize="{TemplateBinding FontSize}"
                                                Glyph="&#xE700;" />
                                        </Viewbox>
                                    </Border>

                                    <ContentPresenter
                                        x:Name="ContentPresenter"
                                        Grid.Column="1"
                                        VerticalContentAlignment="Center"
                                        Content="{TemplateBinding Content}"
                                        FontSize="{TemplateBinding FontSize}" />

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                                    <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Checked">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="CheckedPointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="CheckedPressed">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="CheckedDisabled">
                                                <VisualState.Setters>
                                                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </muxc:NavigationView.PaneToggleButtonStyle>

            <muxc:NavigationView.PaneHeader>
                <TextBlock
                    x:Uid="SidebarHeader"
                    Margin="10,6"
                    VerticalAlignment="Center"
                    FontSize="16"
                    FontWeight="Medium"
                    Text="Files" />
            </muxc:NavigationView.PaneHeader>
        </muxc:NavigationView>
    </Grid>
</UserControl>