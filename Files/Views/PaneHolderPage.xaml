<Page
    x:Class="Files.Views.PaneHolderPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Custom="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls="using:Files.UserControls"
    xmlns:converters="using:Files.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Files.Views"
    xmlns:local1="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:multitaskingcontrol="using:Files.UserControls.MultitaskingControl"
    xmlns:mconv="using:Microsoft.Toolkit.Uwp.UI.Converters"
    Background="{ThemeResource SolidBackgroundFillColorBaseBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="{ThemeResource ControlStrokeColorDefault}" />
                    <SolidColorBrush x:Key="PaneBorderBrush" Color="#FAF9F8" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="{ThemeResource ControlStrokeColorDefault}" />
                    <SolidColorBrush x:Key="PaneBorderBrush" Color="#323130" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
                    <SolidColorBrush x:Key="PaneBorderBrush" Color="{ThemeResource SystemColorWindowColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <Style x:Key="DefaultGridSplitterStyle" TargetType="Custom:GridSplitter">
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="IsFocusEngagementEnabled" Value="True" />
                <Setter Property="MinWidth" Value="2" />
                <Setter Property="MinHeight" Value="2" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="GripperForeground" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Custom:GridSplitter">
                            <Grid
                                x:Name="RootGrid"
                                Background="Transparent"
                                BorderBrush="{ThemeResource SidebarBorderBrush}"
                                BorderThickness="1,0,0,0">
                                <ContentPresenter
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Content="{TemplateBinding Element}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="GridSplitterStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="PaneSelectedBorderBrush" Color="{ThemeResource SystemAccentColorLight1}" />

            <mconv:BoolNegationConverter x:Key="BoolNegationConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource SolidBackgroundFillColorSecondary}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                x:Name="SidebarColumn"
                Width="{x:Bind adaptiveSidebarViewModel.SidebarWidth, Mode=TwoWay}"
                MinWidth="200"
                MaxWidth="500" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <controls:SidebarControl
            x:Name="SidebarControl"
            Grid.RowSpan="2"
            IsOpen="{x:Bind adaptiveSidebarViewModel.IsSidebarOpen, Mode=TwoWay}"
            IsCompact="{x:Bind adaptiveSidebarViewModel.IsWindowCompactSize, Mode=OneWay}"
            CanOpenInNewPane="{x:Bind IsMultiPaneEnabled, Mode=OneWay}"
            EmptyRecycleBinCommand="{x:Bind EmptyRecycleBinCommand, Mode=OneWay}"
            Loaded="SidebarControl_Loaded" />

        <Custom:DropShadowPanel
            Grid.RowSpan="2"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            BlurRadius="16"
            Canvas.ZIndex="100"
            OffsetX="-8"
            ShadowOpacity="0.04 ">
            <Grid Background="{ThemeResource SolidBackgroundFillColorSecondary}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        x:Name="LeftColumn"
                        Width="1.5*"
                        MinWidth="300" />
                    <ColumnDefinition
                        x:Name="RightColumn"
                        Width="0"
                        MinWidth="0" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                

                <Border x:Name="PaneLeftLoader" Grid.Row="1">
                    <local:ModernShellPage
                        x:Name="PaneLeft"
                        ContentChanged="Pane_ContentChanged"
                        IsMultiPaneActive="{x:Bind IsRightPaneVisible, Mode=OneWay}"
                        IsMultiPaneEnabled="{x:Bind IsMultiPaneEnabled, Mode=OneWay}"
                        IsPageMainPane="True"
                        NavParams="{x:Bind NavParamsLeft, Mode=OneWay}"
                        PaneHolder="{x:Bind}"
                        PointerPressed="PaneLeft_PointerPressed" />
                </Border>

                <Border
                    x:Name="PaneRightLoader"
                    Grid.Row="1"
                    Grid.Column="1"
                    x:Load="{x:Bind IsRightPaneVisible, Mode=OneWay}"
                    BorderBrush="{ThemeResource PaneBorderBrush}"
                    BorderThickness="2,0,0,0">
                    <local:ModernShellPage
                        x:Name="PaneRight"
                        ContentChanged="Pane_ContentChanged"
                        IsMultiPaneActive="{x:Bind IsRightPaneVisible, Mode=OneWay}"
                        IsMultiPaneEnabled="{x:Bind IsMultiPaneEnabled, Mode=OneWay}"
                        IsPageMainPane="False"
                        NavParams="{x:Bind NavParamsRight, Mode=OneWay}"
                        PaneHolder="{x:Bind}"
                        PointerPressed="PaneRight_PointerPressed" />

                    <animations:Implicit.ShowAnimations>
                        <animations:ScalarAnimation
                            Target="Translation.X"
                            From="300"
                            To="0"
                            Duration="0:0:0.2" />
                        <animations:ScalarAnimation
                            Target="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.2" />
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:ScalarAnimation
                            Target="Translation.X"
                            From="0"
                            To="300"
                            Duration="0:0:0.2" />
                        <animations:ScalarAnimation
                            Target="Opacity"
                            From="1"
                            To="0"
                            Duration="0:0:0.2" />
                    </animations:Implicit.HideAnimations>
                </Border>

                <Custom:GridSplitter
                    x:Name="PaneResizer"
                    Grid.Row="1"
                    Grid.Column="1"
                    Width="5"
                    MinWidth="5"
                    HorizontalAlignment="Left"
                    Background="Transparent"
                    Canvas.ZIndex="150"
                    CursorBehavior="ChangeOnSplitterHover"
                    Foreground="Transparent"
                    GripperCursor="Default"
                    GripperForeground="Transparent"
                    IsTabStop="False"
                    ManipulationCompleted="PaneResizer_ManipulationCompleted"
                    ResizeBehavior="BasedOnAlignment"
                    ResizeDirection="Auto"
                    Style="{StaticResource DefaultGridSplitterStyle}">
                    <Custom:GridSplitter.RenderTransform>
                        <TranslateTransform X="0" />
                    </Custom:GridSplitter.RenderTransform>
                </Custom:GridSplitter>

                <Interactivity:Interaction.Behaviors>
                    <Core:DataTriggerBehavior Binding="{x:Bind converters:MultiBooleanConverter.AndConvert(IsLeftPaneActive, IsRightPaneVisible), Mode=OneWay}" Value="True">
                        <Core:ChangePropertyAction
                            PropertyName="CurrentInstanceBorderBrush"
                            TargetObject="{Binding ElementName=PaneLeft}"
                            Value="{StaticResource PaneSelectedBorderBrush}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{x:Bind converters:MultiBooleanConverter.AndConvert(IsLeftPaneActive, IsRightPaneVisible), Mode=OneWay}" Value="False">
                        <Core:ChangePropertyAction
                            PropertyName="CurrentInstanceBorderBrush"
                            TargetObject="{Binding ElementName=PaneLeft}"
                            Value="{StaticResource SystemControlTransparentBrush}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{x:Bind converters:MultiBooleanConverter.AndConvert(IsRightPaneActive, IsRightPaneVisible), Mode=OneWay}" Value="True">
                        <Core:ChangePropertyAction
                            PropertyName="CurrentInstanceBorderBrush"
                            TargetObject="{Binding ElementName=PaneRight}"
                            Value="{StaticResource PaneSelectedBorderBrush}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{x:Bind converters:MultiBooleanConverter.AndConvert(IsRightPaneActive, IsRightPaneVisible), Mode=OneWay}" Value="False">
                        <Core:ChangePropertyAction
                            PropertyName="CurrentInstanceBorderBrush"
                            TargetObject="{Binding ElementName=PaneRight}"
                            Value="{StaticResource SystemControlTransparentBrush}" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{x:Bind IsRightPaneVisible, Mode=OneWay}" Value="True">
                        <Core:ChangePropertyAction
                            PropertyName="MinWidth"
                            TargetObject="{Binding ElementName=RightColumn}"
                            Value="290" />
                        <Core:ChangePropertyAction
                            PropertyName="Width"
                            TargetObject="{Binding ElementName=RightColumn}"
                            Value="*" />
                        <Core:ChangePropertyAction
                            PropertyName="Width"
                            TargetObject="{Binding ElementName=LeftColumn}"
                            Value="1.5*" />
                    </Core:DataTriggerBehavior>
                    <Core:DataTriggerBehavior Binding="{x:Bind IsRightPaneVisible, Mode=OneWay}" Value="False">
                        <Core:ChangePropertyAction
                            PropertyName="MinWidth"
                            TargetObject="{Binding ElementName=RightColumn}"
                            Value="0" />
                        <Core:ChangePropertyAction
                            PropertyName="Width"
                            TargetObject="{Binding ElementName=RightColumn}"
                            Value="0" />
                        <Core:ChangePropertyAction
                            PropertyName="Width"
                            TargetObject="{Binding ElementName=LeftColumn}"
                            Value="1.5*" />
                    </Core:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Grid>
        </Custom:DropShadowPanel>

        <Custom:GridSplitter
            x:Name="SidebarResizer"
            Grid.RowSpan="2"
            Grid.Column="1"
            Width="5"
            MinWidth="5"
            HorizontalAlignment="Left"
            Background="Transparent"
            Canvas.ZIndex="150"
            CursorBehavior="ChangeOnSplitterHover"
            Foreground="Transparent"
            GripperCursor="Default"
            GripperForeground="Transparent"
            IsTabStop="False"
            ResizeBehavior="BasedOnAlignment"
            ResizeDirection="Auto"
            Style="{StaticResource DefaultGridSplitterStyle}"
            Visibility="{x:Bind adaptiveSidebarViewModel.IsSidebarOpen, Mode=OneWay}">
            <Custom:GridSplitter.RenderTransform>
                <TranslateTransform X="0" />
            </Custom:GridSplitter.RenderTransform>
        </Custom:GridSplitter>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind adaptiveSidebarViewModel.IsSidebarOpen, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SidebarColumn.MinWidth" Value="{ThemeResource NavigationViewCompactPaneLength}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <Page.KeyboardAccelerators>
        <KeyboardAccelerator
            Key="Left"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control,Shift" />
        <KeyboardAccelerator
            Key="Right"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control,Shift" />
        <KeyboardAccelerator
            Key="W"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control,Shift" />
        <KeyboardAccelerator
            Key="Add"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Menu,Shift" />
    </Page.KeyboardAccelerators>
</Page>