<local:BaseLayout
    x:Class="Files.Views.LayoutModes.GridViewBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:converters1="using:Files.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:icore="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Files"
    xmlns:local2="using:Files.Filesystem"
    xmlns:local3="using:Files.Filesystem.Cloud"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:xh="using:Files.Helpers.XamlHelpers"
    x:Name="PageRoot"
    NavigationCacheMode="Enabled"
    PointerWheelChanged="BaseLayout_PointerWheelChanged"
    mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <icore:EventTriggerBehavior EventName="PointerPressed">
            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ItemPointerPressedCommand}"/>
        </icore:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    <local:BaseLayout.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter
            x:Key="NegatedBoolToVisibilityConverter"
            FalseValue="Visible"
            TrueValue="Collapsed" />

        <converters1:BoolToSelectionMode x:Key="BoolToSelectionModeConverter" />

        <MenuFlyout
            x:Key="BaseLayoutContextFlyout"
            x:Name="BaseLayoutContextFlyout"
            AreOpenCloseAnimationsEnabled="{x:Bind AppSettings.AreRightClickContentMenuAnimationsEnabled, Mode=OneWay}"
            Opening="RightClickContextMenu_Opening">
            <MenuFlyoutSubItem
                x:Name="SortByEmptySpace"
                x:Uid="BaseLayoutContextFlyoutSortBy"
                Text="Sort by">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE8CB;" />
                </MenuFlyoutSubItem.Icon>
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByName"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByName, Mode=TwoWay}"
                    Text="Name" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDate"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByDate, Mode=TwoWay}"
                    Text="Date modified" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDateCreated"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByDateCreated, Mode=TwoWay}"
                    Text="Date created" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByType"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByType, Mode=TwoWay}"
                    Text="Type" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortBySize"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedBySize, Mode=TwoWay}"
                    Text="Size" />
                <MenuFlyoutSeparator />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByAscending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedAscending, Mode=TwoWay}"
                    Text="Ascending" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDescending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedDescending, Mode=TwoWay}"
                    Text="Descending" />
            </MenuFlyoutSubItem>
            <MenuFlyoutSubItem x:Uid="BaseLayoutContextFlyoutLayoutMode" Text="Layout mode">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE152;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutGridViewLarge"
                    Command="{x:Bind FolderSettings.ToggleLayoutModeGridViewLarge}"
                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                    Text="Grid View (Large)">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE739;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutGridViewMedium"
                    Command="{x:Bind FolderSettings.ToggleLayoutModeGridViewMedium}"
                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                    Text="Grid View (Medium)">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xF0E2;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutGridViewSmall"
                    Command="{x:Bind FolderSettings.ToggleLayoutModeGridViewSmall}"
                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                    Text="Grid View (Small)">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE80A;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutTilesView"
                    Command="{x:Bind FolderSettings.ToggleLayoutModeTiles}"
                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                    Text="Tiles View">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE15C;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutDetails"
                    Command="{x:Bind FolderSettings.ToggleLayoutModeDetailsView}"
                    CommandParameter="{xh:SystemTypeToXaml Bool=True}"
                    Text="Details View">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE179;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>
            <MenuFlyoutItem
                x:Name="RefreshEmptySpace"
                x:Uid="BaseLayoutContextFlyoutRefresh"
                Click="{x:Bind ParentShellPageInstance.Refresh_Click}"
                Text="Refresh">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE72C;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="F5" IsEnabled="False" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="PasteEmptySpace"
                    x:Uid="BaseLayoutContextFlyoutPaste"
                    IsEnabled="{x:Bind converters1:MultiBooleanConverter.AndConvert(InstanceViewModel.CanPasteInPage, local:App.InteractionViewModel.IsPasteEnabled), Mode=OneWay}"
                    Text="Paste">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.PasteItemsFromClipboardCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE77F;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="V"
                        IsEnabled="False"
                        Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="OpenTerminal"
                    x:Uid="BaseLayoutContextFlyoutOpenInTerminal"
                    IsEnabled="{x:Bind InstanceViewModel.CanOpenTerminalInPage, Mode=OneWay}"
                    Text="Open in Terminal...">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenDirectoryInDefaultTerminalCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE756;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutSubItem
                x:Name="NewEmptySpace"
                x:Uid="BaseLayoutContextFlyoutNew"
                Text="New">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE710;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutSubItem.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="N"
                        IsEnabled="False"
                        Modifiers="Control,Shift" />
                </MenuFlyoutSubItem.KeyboardAccelerators>
                <MenuFlyoutItem
                        x:Name="NewFolder"
                        x:Uid="BaseLayoutContextFlyoutNewFolder"
                        Text="Folder">
                    <i:Interaction.Behaviors>
                        <icore:EventTriggerBehavior EventName="Click">
                            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CreateNewFolderCommand}"/>
                        </icore:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE8B7;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator x:Name="NewMenuFileFolderSeparator" />
                <MenuFlyoutItem
                        x:Name="NewFile"
                        x:Uid="BaseLayoutContextFlyoutNewFile"
                        IsEnabled="{x:Bind InstanceViewModel.CanCreateFileInPage, Mode=OneWay}"
                        Text="File">
                    <i:Interaction.Behaviors>
                        <icore:EventTriggerBehavior EventName="Click">
                            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CreateNewFileCommand}"/>
                        </icore:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE7C3;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="PinDirectoryToSidebar"
                    x:Uid="BaseLayoutContextFlyoutPinDirectoryToSidebar"
                    x:Load="False"
                    Text="Pin directory to sidebar">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.PinDirectoryToSidebarCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE840;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="UnpinDirectoryFromSidebar"
                x:Uid="BaseLayoutContextFlyoutUnpinDirectoryFromSidebar"
                x:Load="False"
                Text="Unpin directory from sidebar">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.UnpinDirectoryFromSidebarCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE77A;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="PropertiesFolder"
                    x:Uid="BaseLayoutContextFlyoutPropertiesFolder"
                    Text="Properties">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ShowFolderPropertiesCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="BaseLayoutRecycleBinContextFlyout" AreOpenCloseAnimationsEnabled="{x:Bind AppSettings.AreRightClickContentMenuAnimationsEnabled, Mode=OneWay}">
            <MenuFlyoutSubItem
                x:Name="RecycleBinSortByEmptySpace"
                x:Uid="BaseLayoutContextFlyoutSortBy"
                Text="Sort by">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon Glyph="&#xE8CB;" />
                </MenuFlyoutSubItem.Icon>
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByName"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByName, Mode=TwoWay}"
                    Text="Name" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByOriginalPath"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByOriginalPath, Mode=TwoWay}"
                    Text="Original path" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDateDeleted"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByDateDeleted, Mode=TwoWay}"
                    Text="Date deleted" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByType"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByType, Mode=TwoWay}"
                    Text="Type" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortBySize"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedBySize, Mode=TwoWay}"
                    Text="Size" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDate"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByDate, Mode=TwoWay}"
                    Text="Date modified" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDateCreated"
                    GroupName="SortGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedByDateCreated, Mode=TwoWay}"
                    Text="Date created" />
                <MenuFlyoutSeparator />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByAscending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedAscending, Mode=TwoWay}"
                    Text="Ascending" />
                <muxc:RadioMenuFlyoutItem
                    x:Uid="BaseLayoutContextFlyoutSortByDescending"
                    GroupName="SortOrderGroup"
                    IsChecked="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsSortedDescending, Mode=TwoWay}"
                    Text="Descending" />
            </MenuFlyoutSubItem>
            <MenuFlyoutItem
                x:Name="RecycleBinRefreshEmptySpace"
                x:Uid="BaseLayoutContextFlyoutRefresh"
                Click="{x:Bind ParentShellPageInstance.Refresh_Click}"
                Text="Refresh">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE72C;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="F5" IsEnabled="False" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Name="EmptyRecycleBin"
                x:Uid="BaseLayoutContextFlyoutEmptyRecycleBin"
                IsEnabled="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsFolderEmptyTextDisplayed, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                Text="Empty recycle bin">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.EmptyRecycleBinCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon FontFamily="{StaticResource RecycleBinIcons}" Glyph="&#xEF88;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout
            x:Key="BaseLayoutItemContextFlyout"
            x:Name="BaseLayoutItemContextFlyout"
            AreOpenCloseAnimationsEnabled="{x:Bind AppSettings.AreRightClickContentMenuAnimationsEnabled, Mode=OneWay}"
            Opening="RightClickItemContextMenu_Opening">
            <MenuFlyoutItem
                x:Name="OpenItem"
                x:Uid="BaseLayoutItemContextFlyoutOpenItem"
                x:Load="False"
                Tag="Open_FlyoutItem"
                Text="Open">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenItemCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8E5;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="OpenItemWithAppPicker"
                    x:Uid="BaseLayoutItemContextFlyoutOpenItemWith"
                    x:Load="False"
                    Tag="OpenWith"
                    Text="Open With">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenItemWithApplicationPickerCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE17D;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="OpenFileLocation"
                    x:Uid="BaseLayoutItemContextFlyoutOpenFileLocation"
                    Text="Open file location"
                    Visibility="{x:Bind SelectedItemsPropertiesViewModel.IsSelectedItemShortcut, Mode=OneWay}">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenFileLocationCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8DA;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="OpenInNewPane"
                    x:Uid="BaseLayoutItemContextFlyoutOpenInNewPane"
                    Tag="OpenPane_FlyoutItem"
                    Text="Open in new pane">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenDirectoryInNewPaneCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xF57C;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="OpenInNewTab"
                    x:Uid="BaseLayoutItemContextFlyoutOpenInNewTab"
                    x:Load="False"
                    Tag="OpenTab_FlyoutItem"
                    Text="Open in new tab">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenDirectoryInNewTabCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF113;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="OpenInNewWindowItem"
                    x:Uid="BaseLayoutItemContextFlyoutOpenInNewWindow"
                    x:Load="False"
                    Tag="OpenWindow_FlyoutItem"
                    Text="Open in new window">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.OpenInNewWindowItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE737;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSubItem
                x:Uid="BaseLayoutItemContextFlyoutSetAs"
                Text="Set as"
                Visibility="{x:Bind SelectedItemsPropertiesViewModel.IsSelectedItemImage, Mode=OneWay}">
                <MenuFlyoutItem
                    x:Name="SetAsDesktopBackgroundItem"
                    x:Uid="BaseLayoutItemContextFlyoutSetAsDesktopBackground"
                    Text="Set as desktop background">
                    <i:Interaction.Behaviors>
                        <icore:EventTriggerBehavior EventName="Click">
                            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.SetAsDesktopBackgroundItemCommand}" />
                        </icore:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE91B;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    x:Name="SetAsLockscreenBackgroundItem"
                    x:Uid="BaseLayoutItemContextFlyoutSetAsLockscreenBackground"
                    Text="Set as lockscreen background">
                    <i:Interaction.Behaviors>
                        <icore:EventTriggerBehavior EventName="Click">
                            <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.SetAsLockscreenBackgroundItemCommand}" />
                        </icore:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                    <MenuFlyoutItem.Icon>
                        <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF114;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>

            <MenuFlyoutItem
                x:Name="RunAsAdmin"
                x:Uid="BaseLayoutContextFlyoutRunAsAdmin"
                x:Load="False"
                Text="Run as another user">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.RunAsAdminCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE7EF;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="RunAsAnotherUser"
                x:Uid="BaseLayoutContextFlyoutRunAsAnotherUser"
                x:Load="False"
                Text="RunAsAnotherUser">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.RunAsAnotherUserCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE7EE;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="ShareItem"
                    x:Uid="BaseLayoutItemContextFlyoutShare"
                    Text="Share">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ShareItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE72D;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="CutItem"
                    x:Uid="BaseLayoutItemContextFlyoutCut"
                    Text="Cut">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CutItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8C6;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="X"
                        IsEnabled="False"
                        Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="CopyItem"
                    x:Uid="BaseLayoutItemContextFlyoutCopy"
                    Text="Copy">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CopyItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8C8;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator
                        Key="C"
                        IsEnabled="False"
                        Modifiers="Control" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="CopyLocationItem"
                    x:Uid="BaseLayoutItemContextFlyoutCopyLocation"
                    Text="Copy location">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CopyPathOfSelectedItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE167;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Name="CreateShortcut"
                x:Uid="BaseLayoutItemContextFlyoutShortcut"
                Text="Create shortcut">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.CreateShortcutCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon FontFamily="{StaticResource CustomGlyph}" Glyph="&#xF10A;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="DeleteItem"
                    x:Uid="BaseLayoutItemContextFlyoutDelete"
                    Text="Delete">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.DeleteItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE74D;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Delete" IsEnabled="False" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="RenameItem"
                x:Uid="BaseLayoutItemContextFlyoutRename"
                Text="Rename">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.RenameItemCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE8AC;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="F2" IsEnabled="False" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Name="SidebarPinItem"
                x:Uid="BaseLayoutItemContextFlyoutPinToSidebar"
                x:Load="False"
                Tag="PinItem_FlyoutItem"
                Text="Pin to sidebar">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.SidebarPinItemCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE718;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="SidebarUnpinItem"
                x:Uid="SideBarUnpinFromSideBar"
                x:Load="False"
                Tag="PinItem_FlyoutItem"
                Text="Unpin from sidebar">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.SidebarUnpinItemCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE77A;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="PinItemToStart"
                x:Uid="PinItemToStart"
                x:Load="False"
                Click="PinItemToStart_Click"
                Text="Pin to the Start Menu">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE840;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="UnpinItemFromStart"
                x:Uid="UnpinItemFromStart"
                x:Load="False"
                Click="UnpinItemFromStart_Click"
                Text="Unpin from the Start Menu">
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE77A;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                    x:Name="PropertiesItem"
                    x:Uid="BaseLayoutItemContextFlyoutProperties"
                    Text="Properties">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ShowPropertiesCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                x:Name="QuickLook"
                x:Uid="BaseLayoutItemContextFlyoutQuickLook"
                Text="QuickLook"
                Visibility="{x:Bind IsQuickLookEnabled}">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.QuickLookCommand}" />
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <BitmapIcon UriSource="ms-appx:///Assets/QuickLook/quicklook_icon_black.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <MenuFlyout x:Key="BaseLayoutRecycleBinItemContextFlyout" AreOpenCloseAnimationsEnabled="{x:Bind AppSettings.AreRightClickContentMenuAnimationsEnabled, Mode=OneWay}">
            <MenuFlyoutItem
                    x:Name="RestoreRecycleBinItem"
                    x:Uid="BaseLayoutItemContextFlyoutRestore"
                    Text="Restore">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.RestoreItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE7A7;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="DeleteRecycleBinItem"
                    x:Uid="BaseLayoutItemContextFlyoutDelete"
                    Text="Delete">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.DeleteItemCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon FontFamily="{StaticResource OldFluentUIGlyphs}" Glyph="&#xe9ee;" />
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Delete" IsEnabled="False" />
                </MenuFlyoutItem.KeyboardAccelerators>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                    x:Name="PropertiesRecycleBinItem"
                    x:Uid="BaseLayoutItemContextFlyoutProperties"
                    Text="Properties">
                <i:Interaction.Behaviors>
                    <icore:EventTriggerBehavior EventName="Click">
                        <icore:InvokeCommandAction Command="{x:Bind CommandsViewModel.ShowPropertiesCommand}"/>
                    </icore:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <MenuFlyoutItem.Icon>
                    <FontIcon Glyph="&#xE946;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>

        <DataTemplate x:Name="GridViewBrowserTemplate" x:DataType="local2:ListedItem">
            <Grid
                Width="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                IsRightTapEnabled="True"
                RightTapped="StackPanel_RightTapped"
                ToolTipService.ToolTip="{x:Bind ItemName, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    Width="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                    Height="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                    Opacity="{x:Bind Opacity, Mode=OneWay}"
                    Tag="ItemImage">
                    <Image
                        x:Name="Picture"
                        Margin="12"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadFileIcon, Mode=OneWay}"
                        x:Phase="1"
                        Source="{x:Bind FileImage, Mode=OneWay}"
                        Stretch="Uniform" />
                    <Image
                        x:Name="FolderGlyph"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadFolderGlyph, Mode=OneWay}"
                        x:Phase="1"
                        Stretch="Uniform">
                        <Image.Source>
                            <SvgImageSource
                                RasterizePixelHeight="256"
                                RasterizePixelWidth="256"
                                UriSource="{x:Bind FolderIconSourceLarge}" />
                        </Image.Source>
                    </Image>
                    <Viewbox
                        x:Name="TypeUnknownGlyph"
                        MaxWidth="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                        MaxHeight="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                        Margin="12"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadUnknownTypeGlyph, Mode=OneWay}"
                        x:Phase="1">
                        <FontIcon Glyph="&#xE7C3;" />
                    </Viewbox>
                    <Image
                        x:Name="IconOverlay"
                        Width="60"
                        Height="60"
                        Margin="8,0,0,8"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        x:Load="True"
                        x:Phase="1"
                        Source="{x:Bind IconOverlay, Mode=OneWay}"
                        Stretch="Uniform" />
                    <Viewbox
                        x:Name="WebShortcutGlyph"
                        MaxWidth="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                        MaxHeight="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                        Margin="12"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadWebShortcutGlyph, Mode=OneWay}"
                        x:Phase="1">
                        <FontIcon FontSize="28" Glyph="&#xE71B;" />
                    </Viewbox>
                    <Border
                        x:Name="ShortcutGlyphElement"
                        Margin="8,0,0,8"
                        Padding="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        x:Load="{x:Bind IsShortcutItem}"
                        x:Phase="1"
                        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}"
                        BorderThickness="1">
                        <FontIcon
                            FontFamily="{StaticResource CustomGlyph}"
                            FontSize="18"
                            Glyph="&#xF10A;" />
                    </Border>
                </Grid>
                <Grid
                    Grid.Row="1"
                    MaxWidth="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                    Margin="5,0,5,10"
                    HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <FontIcon
                        x:Name="CloudDriveSyncStatusGlyph"
                        Grid.Column="0"
                        Margin="0,0,5,0"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).LoadSyncStatus, Mode=OneWay}"
                        x:Phase="2"
                        FontSize="18"
                        Foreground="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).Foreground, Mode=OneWay}"
                        Glyph="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).Glyph, Mode=OneWay}" />
                    <TextBlock
                        x:Name="ItemName"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Text="{x:Bind ItemName, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap" />
                </Grid>
                <Popup
                    x:Name="EditPopup"
                    Grid.Row="1"
                    x:Load="False">
                    <TextBox
                        x:Name="GridViewTextBoxItemName"
                        Width="{Binding FolderSettings.GridViewSize, ElementName=PageRoot, Mode=OneWay}"
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Text="{x:Bind ItemName, Mode=OneWay}"
                        TextAlignment="Center"
                        TextChanged="GridViewTextBoxItemName_TextChanged"
                        TextWrapping="Wrap" />
                </Popup>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Name="TilesBrowserTemplate" x:DataType="local2:ListedItem">
            <Grid
                Width="260"
                Height="100"
                Margin="0,0,0,0"
                Padding="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent"
                IsRightTapEnabled="True"
                RightTapped="StackPanel_RightTapped"
                ToolTipService.ToolTip="{x:Bind ItemName, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <FontIcon
                    x:Name="CloudDriveSyncStatusGlyph"
                    Grid.Column="0"
                    Margin="10,0,0,0"
                    x:Load="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).LoadSyncStatus, Mode=OneWay}"
                    x:Phase="2"
                    Foreground="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).Foreground, Mode=OneWay}"
                    Glyph="{x:Bind ((local3:CloudDriveSyncStatusUI)SyncStatusUI).Glyph, Mode=OneWay}" />
                <Grid
                    Grid.Column="1"
                    Height="Auto"
                    MinHeight="100"
                    Opacity="{x:Bind Opacity, Mode=OneWay}"
                    Tag="ItemImage">
                    <Image
                        x:Name="Picture"
                        Width="74"
                        Margin="0,12,0,12"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadFileIcon, Mode=OneWay}"
                        x:Phase="1"
                        Source="{x:Bind FileImage, Mode=OneWay}"
                        Stretch="Uniform" />
                    <Image
                        x:Name="FolderGlyph"
                        Width="74"
                        Height="74"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadFolderGlyph, Mode=OneWay}"
                        x:Phase="1"
                        Stretch="Uniform">
                        <Image.Source>
                            <SvgImageSource
                                RasterizePixelHeight="128"
                                RasterizePixelWidth="128"
                                UriSource="{x:Bind FolderIconSource}" />
                        </Image.Source>
                    </Image>
                    <FontIcon
                        x:Name="TypeUnknownGlyph"
                        Width="74"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        x:Load="{x:Bind LoadUnknownTypeGlyph, Mode=OneWay}"
                        x:Phase="1"
                        FontSize="74"
                        Glyph="&#xE7C3;" />
                    <Image
                        x:Name="IconOverlay"
                        Width="48"
                        Height="48"
                        Margin="8"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        x:Load="True"
                        x:Phase="1"
                        Source="{x:Bind IconOverlay, Mode=OneWay}"
                        Stretch="Uniform" />
                    <Viewbox
                        x:Name="WebShortcutGlyph"
                        MaxWidth="74"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        x:Load="{x:Bind LoadWebShortcutGlyph, Mode=OneWay}"
                        x:Phase="1">
                        <FontIcon FontSize="28" Glyph="&#xE71B;" />
                    </Viewbox>
                    <Border
                        x:Name="ShortcutGlyphElement"
                        Margin="8,0,0,8"
                        Padding="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        x:Load="{x:Bind IsShortcutItem}"
                        x:Phase="1"
                        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        BorderBrush="{ThemeResource ApplicationForegroundThemeBrush}"
                        BorderThickness="1">
                        <FontIcon
                            FontFamily="{StaticResource CustomGlyph}"
                            FontSize="15"
                            Glyph="&#xF10A;" />
                    </Border>
                </Grid>
                <Grid Grid.Column="2" Height="100">
                    <StackPanel Height="Auto" VerticalAlignment="Center">
                        <TextBlock
                            x:Name="ItemName"
                            Height="Auto"
                            MaxHeight="50"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            Text="{x:Bind ItemName, Mode=OneWay}"
                            TextAlignment="Left"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap" />
                        <TextBox
                            x:Name="TileViewTextBoxItemName"
                            Height="Auto"
                            MaxHeight="50"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Left"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            Text="{x:Bind ItemName, Mode=OneWay}"
                            TextAlignment="Left"
                            TextWrapping="Wrap"
                            Visibility="Collapsed" />
                        <TextBlock
                            HorizontalAlignment="Left"
                            Opacity="0.6"
                            Text="{Binding ItemType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextAlignment="Left"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="NoWrap" />
                        <TextBlock
                            HorizontalAlignment="Left"
                            Opacity="0.6"
                            Text="{x:Bind FileSize}"
                            TextAlignment="Left"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="NoWrap" />
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <Style x:Key="GridViewItemStandardContextFlyout" TargetType="GridViewItem">
            <Setter Property="ContextFlyout" Value="{StaticResource BaseLayoutItemContextFlyout}" />
        </Style>
        <Style x:Key="GridViewItemRecycleBinContextFlyout" TargetType="GridViewItem">
            <Setter Property="ContextFlyout" Value="{StaticResource BaseLayoutRecycleBinItemContextFlyout}" />
        </Style>
    </local:BaseLayout.Resources>

    <Grid
        x:Name="RootGrid"
        Padding="0,0,0,0"
        VerticalAlignment="Stretch">
        <Grid.KeyboardAccelerators>
            <KeyboardAccelerator
                Key="{x:Bind PlusKey}"
                Invoked="{x:Bind GridViewSizeIncrease}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="{x:Bind MinusKey}"
                Invoked="{x:Bind GridViewSizeDecrease}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="Add"
                Invoked="{x:Bind GridViewSizeIncrease}"
                Modifiers="Control" />
            <KeyboardAccelerator
                Key="Subtract"
                Invoked="{x:Bind GridViewSizeDecrease}"
                Modifiers="Control" />
        </Grid.KeyboardAccelerators>
        <Interactivity:Interaction.Behaviors>
            <Core:DataTriggerBehavior Binding="{x:Bind InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}" Value="True">
                <Core:ChangePropertyAction
                    PropertyName="ContextFlyout"
                    TargetObject="{Binding ElementName=RootGrid}"
                    Value="{StaticResource BaseLayoutRecycleBinContextFlyout}" />
            </Core:DataTriggerBehavior>
            <Core:DataTriggerBehavior Binding="{x:Bind InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}" Value="False">
                <Core:ChangePropertyAction
                    PropertyName="ContextFlyout"
                    TargetObject="{Binding ElementName=RootGrid}"
                    Value="{StaticResource BaseLayoutContextFlyout}" />
            </Core:DataTriggerBehavior>
            <Core:DataTriggerBehavior Binding="{x:Bind InstanceViewModel.IsPageTypeSearchResults, Mode=OneWay}" Value="True">
                <Core:ChangePropertyAction
                    PropertyName="ContextFlyout"
                    TargetObject="{Binding ElementName=RootGrid}"
                    Value="{x:Null}" />
            </Core:DataTriggerBehavior>
        </Interactivity:Interaction.Behaviors>
        <muxc:ProgressBar
            x:Name="progBar"
            VerticalAlignment="Top"
            x:Load="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsLoadingIndicatorActive, Mode=OneWay}"
            Background="Transparent"
            IsIndeterminate="True" />
        <TextBlock
            x:Name="EmptyText"
            x:Uid="EmptyFolder"
            Grid.Row="3"
            Margin="0,125,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            x:Load="{x:Bind ParentShellPageInstance.FilesystemViewModel.IsFolderEmptyTextDisplayed, Mode=OneWay}"
            Canvas.ZIndex="0"
            Text="This folder is empty."
            TextWrapping="Wrap" />

        <muxc:TeachingTip
            x:Name="FileNameTeachingTip"
            x:Uid="FileNameTeachingTip"
            CloseButtonContent="OK"
            PreferredPlacement="Auto"
            Subtitle="The file name must not contain the following characters: \ / : * ? &quot; &lt; &gt; |"
            Visibility="Collapsed" />

        <GridView
            x:Name="FileList"
            Padding="12,4,4,0"
            VerticalContentAlignment="Stretch"
            animations:ItemsReorderAnimation.Duration="0:0:0.350"
            x:FieldModifier="public"
            AllowDrop="{x:Bind InstanceViewModel.IsPageTypeSearchResults, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
            ChoosingItemContainer="FileList_ChoosingItemContainer"
            DoubleTapped="FileList_DoubleTapped"
            DragEnter="List_DragEnter"
            Drop="List_Drop"
            IsDoubleTapEnabled="True"
            IsItemClickEnabled="True"
            ItemClick="FileList_ItemClick"
            PreviewKeyDown="FileList_PreviewKeyDown"
            SelectionChanged="FileList_SelectionChanged"
            SelectionMode="{x:Bind InteractionViewModel.MultiselectEnabled, Mode=OneWay, Converter={StaticResource BoolToSelectionModeConverter}}"
            Visibility="{x:Bind FolderSettings.IsLayoutModeChanging, Mode=OneWay, Converter={StaticResource NegatedBoolToVisibilityConverter}}">
            <GridView.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Default">
                            <SolidColorBrush x:Key="GridViewItemCheckBoxBrush" Color="{ThemeResource SystemChromeMediumLowColor}" />
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </GridView.Resources>
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{x:Bind InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}" Value="True">
                    <Core:ChangePropertyAction
                        PropertyName="ItemContainerStyle"
                        TargetObject="{Binding ElementName=FileList}"
                        Value="{StaticResource GridViewItemRecycleBinContextFlyout}" />
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{x:Bind InstanceViewModel.IsPageTypeRecycleBin, Mode=OneWay}" Value="False">
                    <Core:ChangePropertyAction
                        PropertyName="ItemContainerStyle"
                        TargetObject="{Binding ElementName=FileList}"
                        Value="{StaticResource GridViewItemStandardContextFlyout}" />
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </GridView>

        <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Rectangle
                Name="SelectionRectangle"
                Canvas.Left="0"
                Canvas.Top="0"
                Width="0"
                Height="0"
                Fill="{ThemeResource SystemAccentColor}"
                Opacity=".5"
                Stroke="{ThemeResource SystemAccentColorLight1}"
                StrokeThickness="1" />
        </Canvas>
    </Grid>
</local:BaseLayout>